// Generated by Apple Swift version 4.2.1 effective-3.4.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import AVFoundation;
@import AVKit;
@import CoreGraphics;
@import Foundation;
@import GoogleCast;
@import GoogleInteractiveMediaAds;
@import LFLiveKit_;
@import MediaPlayer;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="UizaSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif







@class UIColor;
@class FrameLayout;
@class DoubleFrameLayout;
@class UIView;
@class NSCoder;

SWIFT_CLASS("_TtC7UizaSDK8NKButton")
@interface NKButton : UIButton
/// Set/Get title of the button
@property (nonatomic, copy) NSString * _Nullable title;
/// Space between image and text
@property (nonatomic) CGFloat spacing;
/// Minimum size of imageView, set zero to width or height to disable
@property (nonatomic) CGSize imageMinSize;
/// Maximum size of imageView, set zero to width or height to disable
@property (nonatomic) CGSize imageMaxSize;
/// Fixed size of imageView, set zero to width or height to disable
@property (nonatomic) CGSize imageFixSize;
/// Extend size that will be included in sizeThatFits function
@property (nonatomic) CGSize extendSize;
/// Corner Radius, will be ignored if <code>isRoundedButton</code> is true
@property (nonatomic) CGFloat cornerRadius;
/// Shadow radius
@property (nonatomic) CGFloat shadowRadius;
/// Shadow opacity
@property (nonatomic) float shadowOpacity;
/// Shadow offset
@property (nonatomic) CGSize shadowOffset;
/// Size of border
@property (nonatomic) CGFloat borderSize;
/// Rounds both sides of the button
@property (nonatomic) BOOL isRoundedButton;
/// If <code>true</code>, title label will not be underlined when <code>Settings > Accessibility > Button Shapes</code> is ON
@property (nonatomic) BOOL underlineTitleDisabled;
@property (nonatomic) UIEdgeInsets contentEdgeInsets;
/// If <code>true</code>, disabled color will be set from normal color with tranparency
@property (nonatomic) BOOL autoSetDisableColor;
/// If <code>true</code>, highlighted color will be set from normal color with tranparency
@property (nonatomic) BOOL autoSetHighlightedColor;
@property (nonatomic, strong) UIColor * _Null_unspecified flashColor;
/// Set loading state. Tap interaction will be disabled while loading
@property (nonatomic) BOOL isLoading;
/// imageView will be hidden when <code>isLoading</code> is true
@property (nonatomic) BOOL hideImageWhileLoading;
/// titleLabel will be hidden when <code>isLoading</code> is true
@property (nonatomic) BOOL hideTitleWhileLoading;
/// Button will animated to circle shape when set <code>isLoading = true</code>
@property (nonatomic) BOOL transitionToCircleWhenLoading;
/// Scale ratio of loading indicator, based on the minimum value of button width or height
@property (nonatomic) CGFloat loadingIndicatorScaleRatio;
/// Color of loading indicator, if <code>nil</code>, it will use titleColor of normal state
@property (nonatomic, strong) UIColor * _Nullable loadingIndicatorColor;
/// <code>FrameLayout</code> that layout imageView
@property (nonatomic, readonly, strong) FrameLayout * _Null_unspecified imageFrameLayout;
/// <code>FrameLayout</code> that layout textLabel
@property (nonatomic, readonly, strong) FrameLayout * _Null_unspecified labelFrameLayout;
/// DoubleFrameLayout that layout the content
@property (nonatomic, readonly, strong) DoubleFrameLayout * _Null_unspecified contentFrameLayout;
/// The background view of the button
@property (nonatomic, strong) UIView * _Nullable backgroundView;
@property (nonatomic, copy) void (^ _Nullable animationationDidEnd)(NKButton * _Nonnull);
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title titleColor:(UIColor * _Nullable)titleColor buttonColor:(UIColor * _Nullable)buttonColor shadowColor:(UIColor * _Nullable)shadowColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)sizeToFit;
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
@property (nonatomic) CGRect frame;
@property (nonatomic) CGRect bounds;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (void)startFlashingWithFlashDuration:(NSTimeInterval)flashDuration intensity:(float)intensity repeatCount:(NSInteger)repeatCount;
- (void)stopFlashing;
- (void)setBackgroundColor:(UIColor * _Nullable)color for:(UIControlState)state;
- (void)setBorderColor:(UIColor * _Nullable)color for:(UIControlState)state;
- (void)setShadowColor:(UIColor * _Nullable)color for:(UIControlState)state;
- (void)setGradientColor:(NSArray<UIColor *> * _Nullable)colors for:(UIControlState)state;
- (UIColor * _Nullable)backgroundColorFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nullable)borderColorFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (UIColor * _Nullable)shadowColorFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIColor *> * _Nullable)gradientColorFor:(UIControlState)state SWIFT_WARN_UNUSED_RESULT;
- (void)expandFullscreenWithDuration:(double)duration completionBlock:(void (^ _Nullable)(NKButton * _Nonnull))completionBlock;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class CAAnimation;

@interface NKButton (SWIFT_EXTENSION(UizaSDK)) <CAAnimationDelegate>
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
@end




SWIFT_CLASS("_TtC7UizaSDK21NKFloatingViewHandler")
@interface NKFloatingViewHandler : NSObject
@property (nonatomic) BOOL swipeLeftToDismiss;
@property (nonatomic) BOOL swipeRightToDismiss;
@property (nonatomic) BOOL allowsCornerDocking;
@property (nonatomic) BOOL isEnabled;
@property (nonatomic, readonly) CGFloat floatingProgress;
@property (nonatomic, readonly) BOOL isHorizontalDragging;
@property (nonatomic, readonly) BOOL isVerticalDragging;
@property (nonatomic) BOOL isFloatingMode;
- (void)backToNormalState;
- (void)updatePosition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK14NKProgressView")
@interface NKProgressView : UIView
@property (nonatomic, readonly) float progress;
@property (nonatomic, strong) UIColor * _Nonnull progressColor;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) BOOL isRounded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)setProgress:(float)progress animated:(BOOL)animated;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end














@interface UIColor (SWIFT_EXTENSION(UizaSDK))
- (nonnull instancetype)initWithHex:(NSString * _Nonnull)hex;
@end




@interface UIDevice (SWIFT_EXTENSION(UizaSDK))
+ (BOOL)isPhone SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPad SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isTV SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isSimulator SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isPortrait SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isLandscape SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isCarPlay SWIFT_WARN_UNUSED_RESULT;
@end























@class NSMutableDictionary;

/// Class model nền tảng được dùng bởi tất cả các model khác trong framework. Bạn không cần để ý tới class này.
SWIFT_CLASS("_TtC7UizaSDK13UZModelObject")
@interface UZModelObject : NSObject <NSCoding>
/// Dữ liệu thô của model sẽ được chứa tại đây
@property (nonatomic, strong) NSMutableDictionary * _Nullable data;
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setObject:(id _Nullable)value forKeyedSubscript:(NSString * _Nonnull)key;
/// Khởi tạo class
/// \param data Dữ liệu thô của object
///
- (nonnull instancetype)initWithData:(NSDictionary * _Nonnull)data;
/// Khởi tạo class
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Khởi tạo class
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Khởi tạo class
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end


/// Class chứa nội dung thông tin quảng cáo
SWIFT_CLASS("_TtC7UizaSDK13UZAdsCuePoint")
@interface UZAdsCuePoint : UZModelObject
/// <code>id</code> của chiến dịch quảng cáo
@property (nonatomic, copy) NSString * _Nullable campaignId;
/// <code>id</code> của admin
@property (nonatomic, copy) NSString * _Nullable adminUserId;
/// <code>id</code> của entity chứa nội dung quảng cáo này
@property (nonatomic, copy) NSString * _Nullable entityId;
/// Thời gian vị trí hiển thị quản cáo
@property (nonatomic) NSTimeInterval time;
/// Tên điểm quảng cáo
@property (nonatomic, copy) NSString * _Nullable name;
/// Link hiển thị quảng cáo
@property (nonatomic, copy) NSURL * _Nullable link;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK15UZAirPlayButton")
@interface UZAirPlayButton : MPVolumeView
@property (nonatomic) BOOL isEnabled;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupDefaultIconWithIconSize:(CGSize)iconSize offColor:(UIColor * _Nonnull)offColor onColor:(UIColor * _Nonnull)onColor;
- (void)setImageWithImage:(UIImage * _Nullable)image for:(UIControlState)state;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UZVideoItem;

/// Class chứa thông tin của banner item
SWIFT_CLASS("_TtC7UizaSDK12UZBannerItem")
@interface UZBannerItem : UZModelObject
/// <code>id</code> của banner
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// Tiêu đề của banner
@property (nonatomic, copy) NSString * _Null_unspecified caption;
/// Link hình ảnh
@property (nonatomic, copy) NSURL * _Nullable imageURL;
/// Link được trỏ tới khi nhấn vào
@property (nonatomic, copy) NSURL * _Nullable url;
/// Video item cần phát khi nhấn vào
@property (nonatomic, strong) UZVideoItem * _Nullable videoItem;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK12UZCastButton")
@interface UZCastButton : NKButton
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupDefaultIconWithIconSize:(CGSize)iconSize offColor:(UIColor * _Nonnull)offColor onColor:(UIColor * _Nonnull)onColor;
@end

@class GCKDevice;
@class GCKDiscoveryManager;
@class GCKSessionManager;
@class GCKRemoteMediaClient;
@class GCKCastSession;
@class NSNumber;

SWIFT_CLASS("_TtC7UizaSDK16UZCastingManager")
@interface UZCastingManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UZCastingManager * _Nonnull shared;)
+ (UZCastingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL hasConnectedSession;
@property (nonatomic, readonly) NSInteger deviceCount;
- (GCKDevice * _Nonnull)deviceAt:(NSUInteger)index SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSTimeInterval mediaDuration;
@property (nonatomic) NSTimeInterval lastPosition;
@property (nonatomic, readonly) NSTimeInterval currentPosition;
@property (nonatomic, readonly) GCKMediaPlayerState currentPlayerState;
@property (nonatomic, readonly, strong) GCKDiscoveryManager * _Null_unspecified discoverManager;
@property (nonatomic, readonly, strong) GCKSessionManager * _Null_unspecified sessionManager;
@property (nonatomic, readonly, strong) GCKRemoteMediaClient * _Nullable remoteClient;
@property (nonatomic, strong) GCKCastSession * _Nullable currentCastSession;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)startDiscovering;
- (void)stopDiscovering;
- (void)disconnect;
- (void)play;
- (void)pause;
- (void)stop;
- (void)seekTo:(NSTimeInterval)interval resumeState:(GCKMediaResumeState)resumeState;
- (void)setVolume:(float)volume;
- (void)setMute:(BOOL)muted;
- (void)selectTracksIDs:(NSArray<NSNumber *> * _Nonnull)tracks;
@end


@interface UZCastingManager (SWIFT_EXTENSION(UizaSDK)) <GCKDiscoveryManagerListener>
- (void)didUpdateDeviceList;
@end

@class GCKMediaStatus;

@interface UZCastingManager (SWIFT_EXTENSION(UizaSDK)) <GCKRemoteMediaClientListener>
- (void)remoteMediaClient:(GCKRemoteMediaClient * _Nonnull)client didStartMediaSessionWithID:(NSInteger)sessionID;
- (void)remoteMediaClient:(GCKRemoteMediaClient * _Nonnull)client didUpdateMediaStatus:(GCKMediaStatus * _Nullable)mediaStatus;
@end

@class GCKRequest;
@class GCKError;

@interface UZCastingManager (SWIFT_EXTENSION(UizaSDK)) <GCKRequestDelegate>
- (void)requestDidComplete:(GCKRequest * _Nonnull)request;
- (void)request:(GCKRequest * _Nonnull)request didFailWithError:(GCKError * _Nonnull)error;
- (void)request:(GCKRequest * _Nonnull)request didAbortWithReason:(GCKRequestAbortReason)abortReason;
@end

@class GCKSession;

@interface UZCastingManager (SWIFT_EXTENSION(UizaSDK)) <GCKSessionManagerListener>
- (void)sessionManager:(GCKSessionManager * _Nonnull)sessionManager didStartCastSession:(GCKCastSession * _Nonnull)session;
- (void)sessionManager:(GCKSessionManager * _Nonnull)sessionManager didResumeCastSession:(GCKCastSession * _Nonnull)session;
- (void)sessionManager:(GCKSessionManager * _Nonnull)sessionManager session:(GCKSession * _Nonnull)session didReceiveDeviceStatus:(NSString * _Nullable)statusText;
- (void)sessionManager:(GCKSessionManager * _Nonnull)sessionManager didEndSession:(GCKSession * _Nonnull)session withError:(NSError * _Nullable)error;
- (void)sessionManager:(GCKSessionManager * _Nonnull)sessionManager didSuspendCastSession:(GCKCastSession * _Nonnull)session withReason:(GCKConnectionSuspendReason)reason;
@end


/// Class chứa thông tin của từng chuyên mục
SWIFT_CLASS("_TtC7UizaSDK10UZCategory")
@interface UZCategory : UZModelObject
/// id của chuyên mục
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// Tên chuyên mục
@property (nonatomic, copy) NSString * _Null_unspecified name;
/// Danh sách video của chuyên mục này
@property (nonatomic, copy) NSArray<UZVideoItem *> * _Null_unspecified videos;
/// Mô tả object
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIVisualEffectView;
@class StackFrameLayout;

SWIFT_CLASS("_TtC7UizaSDK15UZEndscreenView")
@interface UZEndscreenView : UIView
@property (nonatomic, readonly, strong) UIVisualEffectView * _Nonnull blurView;
@property (nonatomic, readonly, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, readonly, strong) NKButton * _Nonnull replayButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull shareButton;
@property (nonatomic, readonly, strong) StackFrameLayout * _Nullable frameLayout;
@property (nonatomic, readonly, copy) NSArray<UIButton *> * _Null_unspecified allButtons;
@property (nonatomic, copy) NSString * _Nullable title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupUI;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIWindow;
@class UZPlayerViewController;
@class UZPlayer;
@class UIPanGestureRecognizer;
@class NSBundle;

SWIFT_CLASS("_TtC7UizaSDK30UZFloatingPlayerViewController")
@interface UZFloatingPlayerViewController : UIViewController
@property (nonatomic, readonly, strong) UIWindow * _Nullable playerWindow;
@property (nonatomic, strong) UZPlayerViewController * _Null_unspecified playerViewController;
@property (nonatomic, readonly, strong) UZPlayer * _Nullable player;
@property (nonatomic, readonly, strong) UIView * _Nonnull detailsContainerView;
@property (nonatomic) CGFloat playerRatio;
@property (nonatomic, strong) UZVideoItem * _Nullable videoItem;
@property (nonatomic, copy) NSArray<UZVideoItem *> * _Nullable videoItems;
@property (nonatomic, copy) void (^ _Nullable onDismiss)(void);
@property (nonatomic, copy) void (^ _Nullable onFloatingProgress)(UZFloatingPlayerViewController * _Nonnull, CGFloat);
@property (nonatomic, copy) void (^ _Nullable onFloating)(UZFloatingPlayerViewController * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onUnfloating)(UZFloatingPlayerViewController * _Nonnull);
@property (nonatomic, readonly, strong) NKFloatingViewHandler * _Nullable floatingHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCustomPlayerViewController:(UZPlayerViewController * _Null_unspecified)customPlayerViewController;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (UZPlayerViewController * _Nonnull)presentWith:(UZVideoItem * _Nullable)videoItem playlist:(NSArray<UZVideoItem *> * _Nullable)playlist;
- (void)stop;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly, strong) UIView * _Null_unspecified containerView;
@property (nonatomic, readonly, strong) UIView * _Null_unspecified gestureView;
@property (nonatomic, readonly) CGRect fullRect;
@property (nonatomic, readonly, strong) UIPanGestureRecognizer * _Null_unspecified panGesture;
- (void)floatingHandlerDidDraggingWith:(CGFloat)progress;
- (void)floatingHandlerDidDismiss;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// Class chứa video của các trang nội dung, ví dụ như trang Home
SWIFT_CLASS("_TtC7UizaSDK10UZHomeData")
@interface UZHomeData : NSObject
/// Chứa các mục video trên banner
@property (nonatomic, strong) UZCategory * _Null_unspecified banner;
/// Chứa các chuyên mục nội dung chính
@property (nonatomic, copy) NSArray<UZCategory *> * _Null_unspecified ribbons;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK15UZLiveBadgeView")
@interface UZLiveBadgeView : UIView
@property (nonatomic) NSInteger views;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Class chứa các thông tin về video item
SWIFT_CLASS("_TtC7UizaSDK11UZVideoItem")
@interface UZVideoItem : UZModelObject
/// id của video
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// id chuyên mục của video này
@property (nonatomic, copy) NSString * _Null_unspecified categoryId;
/// feedId của video này
@property (nonatomic, copy) NSString * _Null_unspecified feedId;
/// Tên chuyên mục của video này
@property (nonatomic, copy) NSString * _Null_unspecified categoryName;
/// Tên của kênh
@property (nonatomic, copy) NSString * _Null_unspecified channelName;
/// Thể loại của video này
@property (nonatomic, copy) NSString * _Null_unspecified type;
/// Tựa đề chính
@property (nonatomic, copy) NSString * _Null_unspecified name;
/// Tựa đề phụ
@property (nonatomic, copy) NSString * _Null_unspecified subTitle;
/// Mô tả nội dung chi tiết
@property (nonatomic, copy) NSString * _Null_unspecified details;
/// Mô tả ngắn
@property (nonatomic, copy) NSString * _Null_unspecified shortDescription;
/// Link ảnh thumbnail
@property (nonatomic, copy) NSURL * _Nullable thumbnailURL;
/// Link play của video, có thể rỗng. Nếu rỗng, gọi hàm <code>getLinkPlay</code> để lấy giá trị
@property (nonatomic, copy) NSURL * _Nullable videoURL;
/// <code>true</code> nếu là video đang trực tiếp
@property (nonatomic) BOOL isLive;
@property (nonatomic, copy) NSArray<NSURL *> * _Nullable subtitleURLs;
/// Mô tả object
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// Thông tin một sự kiện đang phát trực tiếp
SWIFT_CLASS("_TtC7UizaSDK11UZLiveEvent")
@interface UZLiveEvent : UZVideoItem
/// Hình ảnh poster của sự kiện
@property (nonatomic, copy) NSURL * _Nullable posterURL;
/// <code>true</code> nếu được encode
@property (nonatomic) BOOL isEncoded;
/// Link phát livestream
@property (nonatomic, readonly, copy) NSURL * _Nullable broadcastURL;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIControl;
@class UITapGestureRecognizer;

SWIFT_CLASS("_TtC7UizaSDK18UZLiveStreamUIView")
@interface UZLiveStreamUIView : UIView <UITextFieldDelegate>
@property (nonatomic, copy) void (^ _Nullable onButtonSelected)(UIControl * _Nullable);
@property (nonatomic, readonly, strong) NKButton * _Nonnull closeButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull beautyButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull cameraButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull viewsBadge;
@property (nonatomic, readonly, strong) NKButton * _Nonnull liveBadge;
@property (nonatomic, readonly, strong) UIView * _Nonnull containerView;
@property (nonatomic, strong) DoubleFrameLayout * _Null_unspecified topFrameLayout;
@property (nonatomic, strong) StackFrameLayout * _Null_unspecified buttonFrameLayout;
@property (nonatomic) NSInteger views;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setupGestures;
- (void)onTap:(UITapGestureRecognizer * _Nonnull)gesture;
- (void)onButtonSelected:(UIButton * _Nonnull)button;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (NSArray<UIButton *> * _Nonnull)allButtons SWIFT_WARN_UNUSED_RESULT;
- (void)clear;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIGestureRecognizer;
@class UITouch;

@interface UZLiveStreamUIView (SWIFT_EXTENSION(UizaSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end

@class LFLiveSession;
@class LFLiveVideoConfiguration;
@class LFLiveAudioConfiguration;

SWIFT_CLASS("_TtC7UizaSDK26UZLiveStreamViewController")
@interface UZLiveStreamViewController : UIViewController
@property (nonatomic, strong) UZLiveStreamUIView * _Nonnull livestreamUIView;
@property (nonatomic, readonly, strong) NKButton * _Nonnull startButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull stopButton;
@property (nonatomic, copy) NSString * _Nullable liveEventId;
@property (nonatomic) NSTimeInterval getViewsInterval;
@property (nonatomic) NSTimeInterval inactiveTime;
@property (nonatomic, readonly, strong) UILabel * _Nonnull liveDurationLabel;
@property (nonatomic, readonly) BOOL isLive;
@property (nonatomic) BOOL saveLocalVideo;
@property (nonatomic, copy) NSURL * _Nullable localVideoURL;
@property (nonatomic, readonly, strong) UZLiveEvent * _Nullable currentLiveEvent;
@property (nonatomic, strong) LFLiveSession * _Nonnull session;
- (LFLiveVideoConfiguration * _Nonnull)videoConfiguration SWIFT_WARN_UNUSED_RESULT;
- (LFLiveAudioConfiguration * _Nonnull)audioConfiguration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithLiveEventId:(NSString * _Nonnull)liveEventId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)requestAccessForVideo;
- (void)requestAccessForAudio;
- (void)start;
- (void)askToStop;
- (void)startLiveWithEvent:(UZLiveEvent * _Null_unspecified)event;
- (void)stopLive;
- (void)onButtonSelected:(UIControl * _Nullable)button;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class LFLiveDebug;

@interface UZLiveStreamViewController (SWIFT_EXTENSION(UizaSDK)) <LFLiveSessionDelegate>
- (void)liveSession:(LFLiveSession * _Nullable)session debugInfo:(LFLiveDebug * _Nullable)debugInfo;
- (void)liveSession:(LFLiveSession * _Nullable)session errorCode:(LFLiveSocketErrorCode)errorCode;
- (void)liveSession:(LFLiveSession * _Nullable)session liveStateDidChange:(LFLiveState)state;
@end


/// Class chứa thông tin trạng thái của LiveVideo
SWIFT_CLASS("_TtC7UizaSDK17UZLiveVideoStatus")
@interface UZLiveVideoStatus : UZModelObject
@property (nonatomic, copy) NSString * _Null_unspecified id;
@property (nonatomic, copy) NSString * _Null_unspecified entityId;
@property (nonatomic, copy) NSString * _Null_unspecified entityName;
@property (nonatomic, copy) NSString * _Null_unspecified state;
@property (nonatomic, copy) NSDate * _Nullable startDate;
@property (nonatomic, copy) NSDate * _Nullable endDate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// Class chứa thông tin của menu item
SWIFT_CLASS("_TtC7UizaSDK10UZMenuItem")
@interface UZMenuItem : UZModelObject
/// <code>id</code> của menu
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// Tựa đề của menu
@property (nonatomic, copy) NSString * _Null_unspecified title;
/// Loại menu
@property (nonatomic, copy) NSString * _Null_unspecified type;
/// Link hình ảnh icon
@property (nonatomic, copy) NSURL * _Nullable iconURL;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// Thông tin số lượng item trong trang
SWIFT_CLASS("_TtC7UizaSDK12UZPagination")
@interface UZPagination : UZModelObject
/// Trang hiện tại
@property (nonatomic) NSInteger page;
/// Giới hạn kết quả mỗi trang
@property (nonatomic) NSInteger limit;
/// Số lượng kết quả hiện tại của trang
@property (nonatomic) NSInteger result;
/// Tổng số lượng kết quả
@property (nonatomic) NSInteger totalItem;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVPlayer;
@class AVMediaSelectionOption;
@class UZPlayerConfig;
@class UZPlayerControlView;
@class UZPlayerLayerView;
@class AVPictureInPictureController;

SWIFT_CLASS("_TtC7UizaSDK8UZPlayer")
@interface UZPlayer : UIView
@property (nonatomic, copy) void (^ _Nullable backBlock)(BOOL);
@property (nonatomic, copy) void (^ _Nullable videoChangedBlock)(UZVideoItem * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable fullscreenBlock)(BOOL);
@property (nonatomic, copy) void (^ _Nullable buttonSelectionBlock)(UIButton * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable playTimeDidChange)(NSTimeInterval, NSTimeInterval);
@property (nonatomic, copy) void (^ _Nullable playStateDidChange)(BOOL);
@property (nonatomic, copy) NSString * _Nonnull videoGravity;
@property (nonatomic, readonly) BOOL isPlaying;
@property (nonatomic, readonly, strong) AVPlayer * _Nullable avPlayer;
@property (nonatomic, readonly, copy) NSArray<AVMediaSelectionOption *> * _Nullable subtitleOptions;
@property (nonatomic, readonly, copy) NSArray<AVMediaSelectionOption *> * _Nullable audioOptions;
@property (nonatomic, copy) NSArray<UZVideoItem *> * _Nullable playlist;
@property (nonatomic) NSInteger currentVideoIndex;
@property (nonatomic, readonly, strong) UZVideoItem * _Nullable currentVideo;
@property (nonatomic, strong) UZPlayerConfig * _Nullable themeConfig;
@property (nonatomic) BOOL shouldAutoPlay;
@property (nonatomic) BOOL shouldShowsControlViewAfterStoppingPiP;
@property (nonatomic) BOOL autoTryNextDefinitionIfError;
@property (nonatomic, strong) UZPlayerControlView * _Null_unspecified controlView;
@property (nonatomic, copy) NSString * _Nonnull liveEndedMessage;
@property (nonatomic) NSTimeInterval preferredForwardBufferDuration;
@property (nonatomic, readonly) NSInteger currentDefinition;
@property (nonatomic, readonly, strong) UZPlayerLayerView * _Nullable playerLayer;
@property (nonatomic, strong) UZPlayerControlView * _Nullable customControlView;
@property (nonatomic, readonly) NSTimeInterval totalDuration;
@property (nonatomic, readonly) NSTimeInterval currentPosition;
@property (nonatomic, readonly) BOOL isURLSet;
@property (nonatomic, readonly) BOOL isSliderSliding;
@property (nonatomic, readonly) BOOL isPauseByUser;
@property (nonatomic, readonly) BOOL isPlayToTheEnd;
@property (nonatomic, readonly) BOOL isReplaying;
@property (nonatomic, readonly, strong) AVPictureInPictureController * _Nullable pictureInPictureController SWIFT_AVAILABILITY(ios,introduced=9.0);
@property (nonatomic) BOOL autoResumeWhenBackFromBackground;
/// Load and play a playlist
/// \param metadataId playlist id
///
/// \param page pagination, start from 0
///
/// \param limit limit item
///
/// \param playIndex index of item to start playing, set -1 to disable auto start
///
/// \param completionBlock callback block with <code>[UZVideoItem]</code>, pagination info, or Error
///
- (void)loadPlaylistWithMetadataId:(NSString * _Nonnull)metadataId page:(NSInteger)page limit:(NSInteger)limit playIndex:(NSInteger)playIndex completionBlock:(void (^ _Nullable)(NSArray<UZVideoItem *> * _Nullable, UZPagination * _Nonnull, NSError * _Nullable))completionBlock;
- (void)loadConfigIdWithConfigId:(NSString * _Nonnull)configId completionBlock:(void (^ _Nullable)(UZPlayerConfig * _Nullable, NSError * _Nullable))completionBlock;
- (void)playIfApplicable;
- (void)play;
/// Stop and unload the player
- (void)stop;
/// Seek to 0.0 and replay the video
- (void)replay;
/// Pause
/// \param allow should allow to response <code>autoPlay</code> function
///
- (void)pauseWithAllowAutoPlay:(BOOL)allow;
/// Seek to time
/// \param to target time
///
- (void)seekTo:(NSTimeInterval)interval completion:(void (^ _Nullable)(void))completion;
/// Seek offset
/// \param offset offset from current time
///
- (void)seekWithOffset:(NSTimeInterval)offset completion:(void (^ _Nullable)(void))completion;
- (void)nextVideo;
- (void)previousVideo;
- (void)togglePiP;
- (void)showLiveEndedMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCustomControlView:(UZPlayerControlView * _Nullable)customControlView;
- (void)setupAudioCategory;
- (void)layoutSubviews;
- (void)showShareFrom:(UIView * _Nonnull)view;
- (void)showRelates;
- (void)showPlaylist;
- (void)showQualitySelector;
- (void)showMediaOptionSelector;
- (void)showAirPlayDevicesSelection;
- (void)showCastingDeviceList;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (void)UZPlayerWithPlayer:(UZPlayerLayerView * _Nonnull)player playerIsPlaying:(BOOL)playing;
- (void)UZPlayerWithPlayer:(UZPlayerLayerView * _Nonnull)player loadedTimeDidChange:(NSTimeInterval)loadedDuration totalDuration:(NSTimeInterval)totalDuration;
- (void)UZPlayerWithPlayer:(UZPlayerLayerView * _Nonnull)player playTimeDidChange:(NSTimeInterval)currentTime totalTime:(NSTimeInterval)totalTime;
- (void)controlViewWithControlView:(UZPlayerControlView * _Nonnull)controlView didChooseDefinition:(NSInteger)index;
- (void)controlViewWithControlView:(UZPlayerControlView * _Nonnull)controlView didSelectButton:(UIButton * _Nonnull)button;
- (void)controlViewWithControlView:(UZPlayerControlView * _Nonnull)controlView slider:(UISlider * _Nonnull)slider onSliderEvent:(UIControlEvents)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface UZPlayer (SWIFT_EXTENSION(UizaSDK)) <AVPictureInPictureControllerDelegate>
- (void)pictureInPictureControllerWillStartPictureInPicture:(AVPictureInPictureController * _Nonnull)pictureInPictureController SWIFT_AVAILABILITY(ios,introduced=9.0);
- (void)pictureInPictureControllerDidStartPictureInPicture:(AVPictureInPictureController * _Nonnull)pictureInPictureController SWIFT_AVAILABILITY(ios,introduced=9.0);
- (void)pictureInPictureControllerDidStopPictureInPicture:(AVPictureInPictureController * _Nonnull)pictureInPictureController SWIFT_AVAILABILITY(ios,introduced=9.0);
@end

@class IMAAdsLoader;
@class IMAAdsLoadedData;
@class IMAAdLoadingErrorData;
@class IMAAdsManager;
@class IMAAdEvent;
@class IMAAdError;

@interface UZPlayer (SWIFT_EXTENSION(UizaSDK)) <IMAAdsLoaderDelegate, IMAAdsManagerDelegate>
- (void)adsLoader:(IMAAdsLoader * _Null_unspecified)loader adsLoadedWithData:(IMAAdsLoadedData * _Null_unspecified)adsLoadedData;
- (void)adsLoader:(IMAAdsLoader * _Null_unspecified)loader failedWithErrorData:(IMAAdLoadingErrorData * _Null_unspecified)adErrorData;
- (void)adsManager:(IMAAdsManager * _Null_unspecified)adsManager didReceiveAdEvent:(IMAAdEvent * _Null_unspecified)event;
- (void)adsManager:(IMAAdsManager * _Null_unspecified)adsManager didReceiveAdError:(IMAAdError * _Null_unspecified)error;
- (void)adsManagerDidRequestContentPause:(IMAAdsManager * _Null_unspecified)adsManager;
- (void)adsManagerDidRequestContentResume:(IMAAdsManager * _Null_unspecified)adsManager;
@end


SWIFT_CLASS("_TtC7UizaSDK14UZPlayerConfig")
@interface UZPlayerConfig : UZModelObject
@property (nonatomic, copy) NSString * _Nullable configId;
@property (nonatomic, copy) NSString * _Nullable themeId;
@property (nonatomic, copy) NSString * _Nullable endscreenMessage;
@property (nonatomic) BOOL autoStart;
@property (nonatomic) BOOL preloadVideo;
@property (nonatomic) BOOL allowFullscreen;
@property (nonatomic) BOOL allowSharing;
@property (nonatomic) BOOL displayPlaylist;
@property (nonatomic) BOOL showEndscreen;
@property (nonatomic) BOOL showQualitySelector;
@property (nonatomic) BOOL showLogo;
@property (nonatomic, copy) NSURL * _Nullable logoImageUrl;
@property (nonatomic, copy) NSURL * _Nullable logoRedirectUrl;
@property (nonatomic, copy) NSString * _Nullable logoDisplayPosition;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK31UZPlayerContainerViewController")
@interface UZPlayerContainerViewController : UIViewController
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NVActivityIndicatorView;
@class UZSlider;

SWIFT_CLASS("_TtC7UizaSDK19UZPlayerControlView")
@interface UZPlayerControlView : UIView
@property (nonatomic) NSTimeInterval autoHideControlsInterval;
@property (nonatomic) BOOL enableTimeshiftForLiveVideo;
@property (nonatomic, strong) UZPlayerConfig * _Nullable playerConfig;
@property (nonatomic) UIEdgeInsets logoEdgeInsetsWhenControlsInvisible;
@property (nonatomic) UIEdgeInsets logoEdgeInsetsWhenControlsVisible;
@property (nonatomic) NSTimeInterval totalDuration;
@property (nonatomic, strong) UITapGestureRecognizer * _Nullable tapGesture;
@property (nonatomic, strong) UITapGestureRecognizer * _Nullable doubleTapGesture;
@property (nonatomic, readonly, copy) NSArray<UIButton *> * _Null_unspecified allButtons;
@property (nonatomic, readonly, strong) UIView * _Nonnull containerView;
@property (nonatomic, readonly, strong) UILabel * _Nonnull titleLabel;
@property (nonatomic, readonly, strong) UILabel * _Nonnull currentTimeLabel;
@property (nonatomic, readonly, strong) UILabel * _Nonnull totalTimeLabel;
@property (nonatomic, readonly, strong) UILabel * _Nonnull remainTimeLabel;
@property (nonatomic, readonly, strong) NKButton * _Nonnull playpauseCenterButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull playpauseButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull forwardButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull backwardButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull nextButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull previousButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull volumeButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull backButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull fullscreenButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull playlistButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull relateButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull ccButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull settingsButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull helpButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull pipButton;
@property (nonatomic, readonly, strong) UZCastButton * _Nonnull castingButton;
@property (nonatomic, readonly, strong) NKButton * _Nonnull enlapseTimeLabel;
@property (nonatomic, readonly, strong) NKButton * _Nonnull logoButton;
@property (nonatomic, readonly, strong) UZAirPlayButton * _Nonnull airplayButton;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull coverImageView;
@property (nonatomic, readonly, strong) UZLiveBadgeView * _Nonnull liveBadgeView;
@property (nonatomic, strong) NVActivityIndicatorView * _Nullable loadingIndicatorView;
@property (nonatomic, strong) UZEndscreenView * _Nonnull endscreenView;
@property (nonatomic, strong) UZSlider * _Null_unspecified timeSlider;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)configUI;
- (void)layoutSubviews;
- (void)playTimeDidChangeWithCurrentTime:(NSTimeInterval)currentTime totalTime:(NSTimeInterval)totalTime;
- (void)loadedTimeDidChangeWithLoadedDuration:(NSTimeInterval)loadedDuration totalDuration:(NSTimeInterval)totalDuration;
- (void)playStateDidChangeWithIsPlaying:(BOOL)isPlaying;
- (void)autoFadeOutControlViewAfter:(NSTimeInterval)interval;
- (void)cancelAutoFadeOutAnimation;
- (void)showControlViewWithDuration:(CGFloat)duration;
- (void)hideControlViewWithDuration:(CGFloat)duration;
- (void)showMessage:(NSString * _Nonnull)message;
- (void)hideMessage;
- (void)alignLogo;
- (void)updateUI:(BOOL)isForFullScreen;
- (void)showEndScreen;
- (void)hideEndScreen;
- (void)showLoader;
- (void)hideLoader;
- (void)showCoverWithLink:(NSString * _Nonnull)cover;
- (void)showCoverWithUrl:(NSURL * _Nullable)url;
- (void)hideCoverImageView;
- (void)showCastingScreen;
- (void)hideCastingScreen;
- (void)onButtonPressed:(UIButton * _Nonnull)button;
- (void)onTap:(UITapGestureRecognizer * _Nonnull)gesture;
- (void)onDoubleTap:(UITapGestureRecognizer * _Nonnull)gesture;
- (void)progressSliderTouchBegan:(UISlider * _Nonnull)sender;
- (void)progressSliderValueChanged:(UISlider * _Nonnull)sender;
- (void)progressSliderTouchEnded:(UISlider * _Nonnull)sender;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface UZPlayerControlView (SWIFT_EXTENSION(UizaSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end

@class AVPlayerItem;
@class AVURLAsset;

SWIFT_CLASS("_TtC7UizaSDK17UZPlayerLayerView")
@interface UZPlayerLayerView : UIView
@property (nonatomic, strong) AVPlayerItem * _Nullable playerItem;
@property (nonatomic) NSTimeInterval preferredForwardBufferDuration;
@property (nonatomic, strong) AVPlayer * _Nullable player;
@property (nonatomic, copy) NSString * _Nonnull videoGravity;
@property (nonatomic) BOOL isPlaying;
- (void)playURLWithUrl:(NSURL * _Nonnull)url;
- (void)playAssetWithAsset:(AVURLAsset * _Nonnull)asset subtitleURL:(NSURL * _Nullable)subtitleURL;
- (void)replaceAssetWithAsset:(AVURLAsset * _Nonnull)asset subtitleURL:(NSURL * _Nullable)subtitleURL;
- (void)play;
- (void)pauseWithAlsoPauseCasting:(BOOL)alsoPauseCasting;
- (void)layoutSubviews;
- (void)resetPlayer;
- (void)prepareToDeinit;
- (void)onTimeSliderBegan;
- (void)seekTo:(NSTimeInterval)seconds completion:(void (^ _Nullable)(void))completion;
- (void)moviePlayerDidEnd;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK22UZPlayerViewController")
@interface UZPlayerViewController : UIViewController
@property (nonatomic, strong) UZPlayer * _Nonnull player;
@property (nonatomic) BOOL autoFullscreenWhenRotateDevice;
@property (nonatomic) NSTimeInterval autoFullscreenDelay;
@property (nonatomic) BOOL isFullscreen;
- (void)setFullscreenWithFullscreen:(BOOL)fullscreen completion:(void (^ _Nullable)(void))completion;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7UizaSDK8UZSlider")
@interface UZSlider : UISlider
@property (nonatomic, readonly, strong) NKProgressView * _Nonnull progressView;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)handleTouchGestureWithGesture:(UITapGestureRecognizer * _Nonnull)gesture;
- (void)layoutSubviews;
- (CGRect)trackRectForBounds:(CGRect)bounds SWIFT_WARN_UNUSED_RESULT;
- (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value SWIFT_WARN_UNUSED_RESULT;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Class chứa thông tin người dùng
SWIFT_CLASS("_TtC7UizaSDK6UZUser")
@interface UZUser : UZModelObject
/// <code>id</code> của người dùng
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// Tên người dùng
@property (nonatomic, copy) NSString * _Nullable name;
/// Giới tính
@property (nonatomic, copy) NSString * _Nullable gender;
/// Số điện thoại
@property (nonatomic, copy) NSString * _Nullable mobile;
/// Địa chỉ email
@property (nonatomic, copy) NSString * _Nullable email;
/// Ngày sinh
@property (nonatomic, copy) NSDate * _Nullable birthday;
/// Facebook ID, nếu login từ Facebook
@property (nonatomic, copy) NSString * _Nullable facebookId;
/// Link hình ảnh đại diện
@property (nonatomic, copy) NSURL * _Nullable avatarURL;
/// Mã token của user
@property (nonatomic, copy) NSString * _Nullable token;
/// Trả về <code>true</code> nếu đây là user hiện tại
@property (nonatomic, readonly) BOOL isMe;
/// Trả về user đã đăng nhập. Nếu user chưa đăng nhập sẽ trả về nil
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UZUser * _Nullable currentUser;)
+ (UZUser * _Nullable)currentUser SWIFT_WARN_UNUSED_RESULT;
/// Link hình ảnh đại diện từ Facebook nếu đây là user login bằng Facebook
/// \param size Kích thước hình đại diện
///
- (NSURL * _Nullable)facebookAvatarWithSize:(NSInteger)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithData:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
/// Mô tả object
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// So sánh bằng nhau
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end


@class UIActivityViewController;

@interface UZVideoItem (SWIFT_EXTENSION(UizaSDK)) <UIActivityItemSource>
- (id _Nullable)activityViewController:(UIActivityViewController * _Nonnull)activityViewController itemForActivityType:(UIActivityType _Nonnull)activityType SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)activityViewControllerPlaceholderItem:(UIActivityViewController * _Nonnull)activityViewController SWIFT_WARN_UNUSED_RESULT;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
